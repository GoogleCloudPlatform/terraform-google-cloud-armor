# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: blueprints.cloud.google.com/v1alpha1
kind: BlueprintMetadata
metadata:
  name: terraform-google-cloud-armor-regional-backend-security-policy
  annotations:
    config.kubernetes.io/local-config: "true"
spec:
  info:
    title: Cloud Armor Regional backend security policy module
    source:
      repo: https://github.com/GoogleCloudPlatform/terraform-google-cloud-armor.git
      sourceType: git
      dir: /modules/regional-backend-security-policy
    version: 5.1.0
    actuationTool:
      flavor: Terraform
      version: ">= 1.3.0"
    description: {}
  content:
    examples:
      - name: global-backend-security-policy-complete
        location: examples/global-backend-security-policy-complete
      - name: global-backend-security-policy-enterprise
        location: examples/global-backend-security-policy-enterprise
      - name: global-backend-security-policy-example
        location: examples/global-backend-security-policy-example
      - name: global-backend-security-policy-recaptcha
        location: examples/global-backend-security-policy-recaptcha
      - name: global-edge-security-policy
        location: examples/global-edge-security-policy
      - name: regional-adv-ddos-and-network-edge-security-policy-complete
        location: examples/regional-adv-ddos-and-network-edge-security-policy-complete
      - name: regional-advanced-network-ddos-protection-enterprise
        location: examples/regional-advanced-network-ddos-protection-enterprise
      - name: regional-backend-security-policy-example
        location: examples/regional-backend-security-policy-example
      - name: regional-network-edge-security-policy-enterprise
        location: examples/regional-network-edge-security-policy-enterprise
  interfaces:
    variables:
      - name: project_id
        description: The project in which the resource belongs.
        varType: string
        required: true
      - name: region
        description: The region in which security policy is created
        varType: string
        required: true
      - name: name
        description: Name of regional security policy. Name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash
        varType: string
        defaultValue: adv-network-ddos-protection
      - name: type
        description: Type indicates the intended use of the security policy. Possible values are CLOUD_ARMOR and CLOUD_ARMOR_EDGE.
        varType: string
        defaultValue: CLOUD_ARMOR
      - name: description
        description: An optional description of advanced network ddos protection security policy
        varType: string
        defaultValue: CA Advance DDoS protection
      - name: pre_configured_rules
        description: Map of pre-configured rules with Sensitivity levels
        varType: |-
          map(object({
              action                  = string
              priority                = number
              description             = optional(string)
              preview                 = optional(bool, false)
              target_rule_set         = string
              sensitivity_level       = optional(number, 4)
              include_target_rule_ids = optional(list(string), [])
              exclude_target_rule_ids = optional(list(string), [])
              rate_limit_options = optional(object({
                enforce_on_key      = optional(string)
                enforce_on_key_name = optional(string)
                enforce_on_key_configs = optional(list(object({
                  enforce_on_key_name = optional(string)
                  enforce_on_key_type = optional(string)
                })))
                exceed_action                        = optional(string)
                rate_limit_http_request_count        = optional(number)
                rate_limit_http_request_interval_sec = optional(number)
                ban_duration_sec                     = optional(number)
                ban_http_request_count               = optional(number)
                ban_http_request_interval_sec        = optional(number)
              }), {})

              preconfigured_waf_config_exclusions = optional(map(object({
                target_rule_set = string
                target_rule_ids = optional(list(string), [])
                request_header = optional(list(object({
                  operator = string
                  value    = optional(string)
                })))
                request_cookie = optional(list(object({
                  operator = string
                  value    = optional(string)
                })))
                request_uri = optional(list(object({
                  operator = string
                  value    = optional(string)
                })))
                request_query_param = optional(list(object({
                  operator = string
                  value    = optional(string)
                })))
              })), null)

            }))
        defaultValue: {}
      - name: security_rules
        description: Map of Security rules with list of IP addresses to block or unblock.
        varType: |-
          map(object({
              action        = string
              priority      = number
              description   = optional(string)
              preview       = optional(bool, false)
              src_ip_ranges = list(string)
              rate_limit_options = optional(object({
                enforce_on_key      = optional(string)
                enforce_on_key_name = optional(string)
                enforce_on_key_configs = optional(list(object({
                  enforce_on_key_name = optional(string)
                  enforce_on_key_type = optional(string)
                })))
                exceed_action                        = optional(string)
                rate_limit_http_request_count        = optional(number)
                rate_limit_http_request_interval_sec = optional(number)
                ban_duration_sec                     = optional(number)
                ban_http_request_count               = optional(number)
                ban_http_request_interval_sec        = optional(number)
                }),
              {})
            }))
        defaultValue: {}
      - name: custom_rules
        description: Custome security rules
        varType: |-
          map(object({
              action      = string
              priority    = number
              description = optional(string)
              preview     = optional(bool, false)
              expression  = string
              rate_limit_options = optional(object({
                enforce_on_key      = optional(string)
                enforce_on_key_name = optional(string)
                enforce_on_key_configs = optional(list(object({
                  enforce_on_key_name = optional(string)
                  enforce_on_key_type = optional(string)
                })))
                exceed_action                        = optional(string)
                rate_limit_http_request_count        = optional(number)
                rate_limit_http_request_interval_sec = optional(number)
                ban_duration_sec                     = optional(number)
                ban_http_request_count               = optional(number)
                ban_http_request_interval_sec        = optional(number)
                }),
              {})

              preconfigured_waf_config_exclusions = optional(map(object({
                target_rule_set = string
                target_rule_ids = optional(list(string), [])
                request_header = optional(list(object({
                  operator = string
                  value    = optional(string)
                })))
                request_cookie = optional(list(object({
                  operator = string
                  value    = optional(string)
                })))
                request_uri = optional(list(object({
                  operator = string
                  value    = optional(string)
                })))
                request_query_param = optional(list(object({
                  operator = string
                  value    = optional(string)
                })))
              })), null)

            }))
        defaultValue: {}
      - name: default_rule_action
        description: default rule that allows/denies all traffic with the lowest priority (2,147,483,647).
        varType: string
        defaultValue: allow
    outputs:
      - name: policy
        description: Regional network Security policy created
      - name: security_rules
        description: Security policy rules created
  requirements:
    roles:
      - level: Project
        roles:
          - roles/compute.orgSecurityPolicyAdmin
          - roles/recaptchaenterprise.admin
          - roles/compute.securityAdmin
          - roles/compute.admin
          - roles/logging.viewer
          - roles/servicenetworking.networksAdmin
          - roles/iam.serviceAccountAdmin
          - roles/iam.serviceAccountUser
          - roles/compute.networkAdmin
    services:
      - iam.googleapis.com
      - cloudresourcemanager.googleapis.com
      - compute.googleapis.com
      - serviceusage.googleapis.com
      - recaptchaenterprise.googleapis.com
      - networksecurity.googleapis.com
    providerVersions:
      - source: hashicorp/google
        version: ">= 6.10, < 7"
      - source: hashicorp/google-beta
        version: ">= 6.10, < 7"
